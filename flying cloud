<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<style>
		button{
        position: relative;
		bottom: 30%;
		left: -10%;
		border: 3px solid black;

		}
		canvas{
			border: 1px solid #d3d3d3;
		}
		</style>
	</head>
	<body>
	<button  id="btn"  onclick>Musica on</button>
    <button  id="btn2" onclick>Musica off</button>
	<script>
		var personagem;
		var obstaculos=[];
		var pontos;
		var penal = 0;
		var backG;
		var botao = document.querySelector("#btn");
		var botao2 = document.querySelector("#btn2");
		var musica = new Audio();
		musica.src = "AUDIO/DBZM.mp3";
		var som = new Audio();
		som.src = "AUDIO/jump.WAV";
		window.onload=function(){
			startGame();
			document.addEventListener("keydown",teclado);
			document.addEventListener("keyup",teclado);
		}		

		function teclado(evento){
			if (evento.type == "keydown"){
				acelerar(-0.2);
				som.play();
			}else{
				acelerar(0.05);
			}
		}

		function acelerar(n){
			personagem.gravidade = n;
		}

		function startGame(){
			personagem = new componente(30,30,"IMG/goku.PNG",10,120,"image");
			personagem.gravidade = 0.05;
			backG = new componente(480,270,"IMG/Sky.PNG",0,0,"image");
			pontos = new componente("30px", "Consolas","#000",280,20,"text");
			gameArea.start();
		}

		var gameArea={
			canvas: document.createElement("canvas"),
			start: function(){
				this.canvas.width = 480;
				this.canvas.height = 270;
				this.context = this.canvas.getContext("2d");
				document.body.insertBefore(this.canvas,document.body.childNodes[0]);
				this.frameNo = 0;
				this.interval = setInterval(updateGameArea,20);
				botao.addEventListener("click", function(e) {  
        		musica.play();
        		musica.volume = 0.3;
				})
				botao2.addEventListener("click", function(e) {  
    			musica.pause();
				})
				
			},
			clear:function(){
				this.context.clearRect(0,0,this.canvas.width,this.canvas.height);
			}
		};

		function componente(width, height, color, x, y, tipo, som){
			this.type = tipo;
			if (tipo == "image") {
   			 this.image = new Image();
    		 this.image.src = color;
  			} 
			this.pontos = 0;
			this.width = width;
			this.height = height;
			this.velX = 0;
			this.velY = 0;
			this.x = x;
			this.y = y;
			this.gravidade = 0;
			this.gravidadeVel = 0;
			this.update = function(){
				ctx = gameArea.context;
				if (this.type == "text"){
					ctx.font = this.width + " " + this.height;
					ctx.fillStyle = color;
					ctx.fillText(this.text,this.x,this.y);
				}if (tipo == "image") {
      			ctx.drawImage(this.image,
        		this.x,
        		this.y,
        		this.width, this.height);
    			} else {
      			ctx.fillStyle = color;
      			ctx.fillRect(this.x, this.y, this.width, this.height);
    		}
 		 }
			this.newPos = function(){
				this.gravidadeVel += this.gravidade;
				this.x += this.velX;
				this.y += this.velY + this.gravidadeVel;
				this.hitBottom();
				this.hitTop();
			}
			this.hitBottom = function(){
				var limite = gameArea.canvas.height - this.height;
				if (this.y > limite){
					this.y = limite;
					this.gravidadeVel = 0;
					penal++;
					if(penal == 20){
						this.pontos--;
						penal = 0;
					} 
				}
			}
			this.hitTop = function(){
				var limite2 = height - this.height;
				if (this.y < limite2){
					this.y = limite2;
					this.gravidadeVel = 0;
					penal++;
					if(penal == 20){
						this.pontos--;
						penal = 0;
					} 

				}
			}
			this.crashWidth = function(otherobj,i){
				var p_left = this.x;
				var p_right = this.x + this.width;
				var p_top = this.y;
				var p_bottom = this.y + this.height;

				var other_left = otherobj.x;
				var other_right = otherobj.x + otherobj.width;
				var other_top = otherobj.y;
				var other_bottom = otherobj.y + otherobj.height;

				var crash = true;
				if (p_bottom < other_top || p_top > other_bottom ||
					p_right<other_left || p_left > other_right){
					crash = false;
					if (p_left > other_right){
						this.pontos++;
						obstaculos.splice(i,2);
					}
				}
				return crash;
			}
		}

		function updateGameArea(){
			var x, height, gap = 80, minH, maxH;
			for (i=0; i < obstaculos.length;i++){
				if (personagem.crashWidth(obstaculos[i],i)){
					return;
				}
			}

			gameArea.clear();
			backG.newPos();
			backG.update();
			gameArea.frameNo += 1;
			if (gameArea.frameNo == 1 || everyinterval(150)){
				x = gameArea.canvas.width;
				minH = 20;
				maxH = 200;
				height = Math.floor(Math.random()*(maxH-minH+1)+minH);
				obstaculos.push(new componente(20,height,"IMG/e1234b.PNG",x,20,"image"));
				obstaculos.push(new componente(20,x - height - gap,"IMG/e567a.PNG",x,height+gap,
				"image"));
			}
			for (i=0;i<obstaculos.length;i++){
				obstaculos[i].x += -1;
				obstaculos[i].update();
			}
			pontos.text = "Pontos: " + personagem.pontos;
			pontos.update();
			personagem.newPos();
			personagem.update();
		}

		function everyinterval(n){
			if ((gameArea.frameNo / n) % 1 ==0){
				return true;
			}
			return false;
		}
		

	</script>
	</body>
</html>
